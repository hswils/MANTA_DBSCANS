Starting IPS 0.8.1
Created <class 'fastran.driver.fastran_init.fastran_init'>
Created <class 'fastran.driver.fastran_driver.fastran_driver'>
Created <class 'fastran.equilibrium.efit.efit'>
Created <class 'fastran.solver.fastran.fastran'>
Created <class 'fastran.external.rf_ic_toric_abr_mcmd.toric'>
Created <class 'fastran.equilibrium.efit.efit'>
Created <class 'fastran.solver.fastran.fastran'>
IPS SLURM_NODES =  [('nid006731', 256)]
2025-08-18 11:30:55,905 FRAMEWORK       WARNING  RM: listOfNodes = [('nid006731', 128)]
2025-08-18 11:30:55,906 FRAMEWORK       WARNING  RM: max_ppn = 128 
2025-08-18 11:30:55,906 FRAMEWORK       WARNING  Using user set procs per node: 128
2025-08-18 11:30:55,906 FRAMEWORK       WARNING  RM: 1 nodes and 128 processors per node
2025-08-18 11:30:55,978 FWK_COMP_PortalBridge_9 WARNING  Missing USER_W3_DIR configuration - disabling web-visible logging
fastran_init.init() started
state_files: s000001.00001 g000001.00001 i000001.00001
create null s000001.00001
create null g000001.00001
create null i000001.00001
fastran_init.step() started
tokamak_id = FPP
shot_number = 000001
INPUT_DIR = /pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/input
model_beam = 0
start dakota update
update_namelist called
instate_method: model
Shape from instate data array
ne from model profile, ped
te from model profile, ped
ti from model profile, ped
density_beam from model profile, parab
j_tot from model profile, parab
omega from model profile, parab
zeff from model profile, const
tbeami from model profile, const
density_alpha from model profile, zero
walpha from model profile, zero
wbeam from the model profile
density_model = 1: impurity = f*ne
init from instate: instate
usng analytic volume
end
rho_rad prad 100 100
integrated :  0.0
rho pohme 100 100
integrated :  0.0
Icurt=2.888e+00MA
rho_nbi pbe 100 100
integrated :  0.0
rho_nbi pbi 100 100
integrated :  0.0
rho_nbi sbedep 100 100
integrated :  0.0
rho_nbi tqbe 100 100
integrated :  0.0
Icurbeam=0.000e+00MA
rho_ecrf peech 100 100
integrated :  0.0
rho_icrf picrf_totals 6 100
integrated :  0.0
rho_icrf picrf_totals 6 100
integrated :  0.0
Icurech=0.000e+00MA
Icurich=0.000e+00MA
fastran_init.finalize() called
********************************************************************************
FASTRAN DIRVER INIT
PORTS (all) = ['INIT', 'DRIVER', 'EQ0', 'TR0', 'IC', 'EQ', 'TR']
PORTS = ['INIT', 'DRIVER', 'EQ0', 'TR0', 'IC', 'EQ', 'TR']
SIMULATION_MODE = NORMAL
*** t0 = 0
EQ0 init ********
>>> efit.init() started
INPUT: SCALE found 1 , mapped value =  enabled
INPUT: R0_SCALE found 1.7 , mapped value =  1.7
INPUT: B0_SCALE found 2.0 , mapped value =  2.0
efit time = 1
init_run =  1
force free
scaled  1.7 2.0
2025-08-18 11:30:56,524 FWK_COMP_PortalBridge_9 INFO     Run Portal URL = http://lb.ipsportal.production.svc.spin.nersc.org/77542
ps_update disabled
Icurt=2.862e+00MA
TR0 init ********
fastran.init() entered
IC init ********
toric.init() called
('touching ', 'torica.inp')
('touching ', 'machine.inp')
('touching ', 'log.toric')
('touching ', 'toric.nc')
('touching ', 'profstat.dat')
('touching ', 'equigs.data')
('touching ', 'equidt.data')
('touching ', 'toric_cfg.nc')
EQ init ********
>>> efit.init() started
INPUT: SCALE found 1 , mapped value =  enabled
INPUT: R0_SCALE found 1.7 , mapped value =  1.7
INPUT: B0_SCALE found 2.0 , mapped value =  2.0
efit time = 1
init_run =  0
TR init ********
fastran.init() entered
nstep_pre: 1

========================================================================
= fastran driver: preprocess iteration number =  0

EQ0 step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.3730562576917535
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 2.863 3.493
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.370  1.232
error_efit = 9.626e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.832 3.531
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.12302469702846236
diff_f = 0.37169332260301075
run efit
efit, subprocess
elapsed time =  0.404  1.211
error_efit = 8.699e-05
*** generate kfile 2
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.803 3.567
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.11130958943724463
diff_f = 0.25161178632471504
run efit
efit, subprocess
elapsed time =  0.394  1.266
error_efit = 9.028e-05
*** generate kfile 3
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.779 3.599
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.07602601139355432
diff_f = 0.14111719164843928
run efit
efit, subprocess
elapsed time =  0.406  1.166
error_efit = 9.379e-05
*** generate kfile 4
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
  ps_init_tag: Plasma State v2.055 f90 module initialization.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.760 3.624
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.04534630995595295
diff_f = 0.07640443288298947
run efit
efit, subprocess
elapsed time =  0.422  1.186
error_efit = 9.512e-05
*** generate kfile 5
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.746 3.642
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.024814746438193768
diff_f = 0.04059922846899693
run efit
efit, subprocess
elapsed time =  0.414  1.196
error_efit = 7.229e-05
*** generate kfile 6
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.737 3.653
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.012740493836810475
diff_f = 0.021217200274979486
run efit
efit, subprocess
elapsed time =  0.402  1.197
error_efit = 7.078e-05
*** generate kfile 7
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.732 3.661
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.0062516312844540746
diff_f = 0.010939413644357498
run efit
efit, subprocess
elapsed time =  0.396  1.157
error_efit = 9.865e-05
*** generate kfile 8
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.728 3.665
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00297065893671137
diff_f = 0.005607453299061539
converged
Icurt=2.725e+00MA
EQ0 step finished
TR0 step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 0.0
dump_vol_profile : rho_fus pfusi 0.0
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 0.0
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 0.0
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=2.013e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  61344816.31982506
rho_fus pfusi 100 100
integrated :  20160812.177627865
model_beam = 0
density_model = 1: impurity = f*ne
TR0 step finished
number of iteration : 5

========================================================================
= fastran driver: iteration number =  0

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7623067349999999E+020
 <n_e(m-3)-PS> =   1.8582002028514155E+020
 <n_e(m-3)-Interpolated> =   1.8657871375097391E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3761506957363916E+020   19.016966080000000     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3761506957363916E+020   19.016966080000000     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   13520734496238204.        19.016966080000000     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
  
  G-EQdsk data accepted, maximum rel. GS error:    7.1285136466894411E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000001     
 electron total   27.259273927000265        3.8250144576017679     
 ion totals fundamental   1.3240008062935865E-004   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        68.915579215317351        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   357019.88912898564     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   8.9254972282246416E-003
 Total FW Driven Current from each source-> Interpolated (A)   357019.88912894629     
 Total FW Driven Current from all sources -> Interpolated (A)   357019.88912894629     
  *ps_update_file_write: normal exit,            6  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   12432918.831881937      Watts
 FW ion power, integral
   27567081.168114256      Watts
error but neglected...
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.3587977557337325
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.002 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.342  1.160
error_efit = 9.572e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.000 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00010806442120288672
diff_f = 3.994435481766879e-05
converged
Icurt=9.998e+00MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 61344816.31982506
dump_vol_profile : rho_fus pfusi 20160812.177627865
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 12432918.831881937
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 135.4874913861986
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 27566945.68062289
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=2.004e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  56424319.764469065
rho_fus pfusi 100 100
integrated :  20356965.353886362
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  1

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7623067349999999E+020
 <n_e(m-3)-PS> =   1.8580824482853202E+020
 <n_e(m-3)-Interpolated> =   1.8657147742549760E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3714199066122225E+020   19.969131153085932     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3714199066122225E+020   19.969131153085932     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   26306651048047272.        19.969131153085932     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
  
  G-EQdsk data accepted, maximum rel. GS error:    7.5084720168166934E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000000     
 electron total   27.249952214877482        3.7434417032553746     
 ion totals fundamental   1.3893755675128879E-004   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        69.006467144310392        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   327292.33861852245     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   8.1823084654630614E-003
 Total FW Driven Current from each source-> Interpolated (A)   327292.33861672087     
 Total FW Driven Current from all sources -> Interpolated (A)   327292.33861672087     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   12397491.472018512      Watts
 FW ion power, integral
   27602508.527981263      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/rf_ic_toric_5/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.347006604363902
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.330  1.146
error_efit = 8.739e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.001 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00016439042210755195
diff_f = 0.00036558771724778336
converged
  ps_init_tag: Plasma State v2.055 f90 module initialization.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
Icurt=1.000e+01MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 56424319.764469065
dump_vol_profile : rho_fus pfusi 20356965.353886362
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 12397491.472018512
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 138.42223247649684
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 27602370.105748802
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=2.085e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  60852779.915053464
rho_fus pfusi 100 100
integrated :  22430647.602194328
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  2

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7623067349999999E+020
 <n_e(m-3)-PS> =   1.8580594986989581E+020
 <n_e(m-3)-Interpolated> =   1.8657384861040302E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3664707995502764E+020   21.276461252374357     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3664707995502764E+020   21.276461252374357     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   39682616080333896.        21.276461252374357     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
  
  G-EQdsk data accepted, maximum rel. GS error:    8.2507396525967596E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   99.999999999999972     
 electron total   27.463754099650121        3.6609085023708876     
 ion totals fundamental   1.5079305329580546E-004   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        68.875186604925673        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   305893.73277065117     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   7.6473433192662792E-003
 Total FW Driven Current from each source-> Interpolated (A)   305893.73277065094     
 Total FW Driven Current from all sources -> Interpolated (A)   305893.73277065094     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   12450146.133493889      Watts
 FW ion power, integral
   27549853.866505928      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/rf_ic_toric_5/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.353066113158377
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.338  1.187
error_efit = 7.616e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.005 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00031921576502323364
diff_f = 0.0005468881545554661
converged
Icurt=1.001e+01MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 60852779.915053464
dump_vol_profile : rho_fus pfusi 22430647.602194328
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 12450146.13349389
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 144.71987668654648
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 27549709.14662924
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=2.103e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  62402716.546445906
rho_fus pfusi 100 100
integrated :  22994969.041473866
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  3

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7623067349999999E+020
 <n_e(m-3)-PS> =   1.8581470979160477E+020
 <n_e(m-3)-Interpolated> =   1.8658729789745470E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3615002523512316E+020   22.409304126346107     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3615002523512316E+020   22.409304126346107     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   53116527429103760.        22.409304126346107     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
  
  G-EQdsk data accepted, maximum rel. GS error:    9.0572015719959653E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000001     
 electron total   27.644977566713777        3.6233353319623784     
 ion totals fundamental   1.4919293370058015E-004   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        68.731537908390152        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   289250.49035547272     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   7.2312622588868178E-003
 Total FW Driven Current from each source-> Interpolated (A)   289250.49035547284     
 Total FW Driven Current from all sources -> Interpolated (A)   289250.49035547284     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   12508247.381046943      Watts
 FW ion power, integral
   27491752.618952833      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/rf_ic_toric_5/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.3617967607492487
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.329  1.197
error_efit = 7.976e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.005 0.999
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.0002528784218184816
diff_f = 0.00045274316980040174
converged
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
Icurt=1.001e+01MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 62402716.546445906
dump_vol_profile : rho_fus pfusi 22994969.041473866
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 12508247.381046943
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 142.45586666009407
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 27491610.163086176
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=2.036e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  58837538.304367475
rho_fus pfusi 100 100
integrated :  21275562.92578901
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  4

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7623067349999999E+020
 <n_e(m-3)-PS> =   1.8582326154264124E+020
 <n_e(m-3)-Interpolated> =   1.8660037467491939E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3567484551497135E+020   22.831521783577994     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3567484551497135E+020   22.831521783577994     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   65959222568341712.        22.831521783577994     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
  
  G-EQdsk data accepted, maximum rel. GS error:    1.0155741746417847E-002
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000003     
 electron total   27.752722447380666        3.6512288764083998     
 ion totals fundamental   1.3975183802203056E-004   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        68.595908924372935        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   274705.36885665724     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   6.8676342214164313E-003
 Total FW Driven Current from each source-> Interpolated (A)   274705.36885665712     
 Total FW Driven Current from all sources -> Interpolated (A)   274705.36885665712     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   12562290.628615387      Watts
 FW ion power, integral
   27437709.371384379      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/rf_ic_toric_5/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.3562600403907414
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.331  1.176
error_efit = 8.014e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.002 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00013044303236806477
diff_f = 0.00021163742326756505
converged
Icurt=1.000e+01MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 58837538.304367475
dump_vol_profile : rho_fus pfusi 21275562.92578901
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 12562290.628615387
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 137.80165356841428
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 27437571.56973082
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=2.042e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  59079310.348478876
rho_fus pfusi 100 100
integrated :  21456960.797005802
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: finalize

EQ0 finalize
>>> efit.finalize() started
EQ0 finalize finished
TR0 finalize
fastran.finalize() entered
TR0 finalize finished
IC finalize
toric.finalize() called
IC finalize finished
EQ finalize
>>> efit.finalize() started
EQ finalize finished
TR finalize
fastran.finalize() entered
TR finalize finished
********************************************************************************
FASTRAN DIRVER FINALIZE
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/plasma_state/a000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/plasma_state/s000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/plasma_state/g000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/plasma_state/i000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/plasma_state/k000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/basecase/SCAN/work/plasma_state/f000001.00001
