fastran_init.init() started
state_files: s000001.00001 g000001.00001 i000001.00001
create null s000001.00001
create null g000001.00001
create null i000001.00001
fastran_init.step() started
tokamak_id = FPP
shot_number = 000001
INPUT_DIR = /pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/input
model_beam = 0
start dakota update
update_namelist called
instate R0 updated
instate A0 updated
instate KAPPA updated
instate DELTA updated
instate B0 updated
instate IP updated
instate NE_AXIS updated
instate NE_PED updated
instate NE_SEP updated
instate TE_AXIS updated
instate TE_PED updated
instate TI_AXIS updated
instate TI_PED updated
instate XMID updated
instate XWID updated
instate H98_TARGET updated
instate_method: model
Shape from instate data array
ne from model profile, ped
te from model profile, ped
ti from model profile, ped
density_beam from model profile, parab
j_tot from model profile, parab
omega from model profile, parab
zeff from model profile, const
tbeami from model profile, const
density_alpha from model profile, zero
walpha from model profile, zero
wbeam from the model profile
density_model = 1: impurity = f*ne
init from instate: instate
usng analytic volume
end
rho_rad prad 100 100
integrated :  0.0
rho pohme 100 100
integrated :  0.0
Icurt=2.888e+00MA
rho_nbi pbe 100 100
integrated :  0.0
rho_nbi pbi 100 100
integrated :  0.0
rho_nbi sbedep 100 100
integrated :  0.0
rho_nbi tqbe 100 100
integrated :  0.0
Icurbeam=0.000e+00MA
rho_ecrf peech 100 100
integrated :  0.0
rho_icrf picrf_totals 6 100
integrated :  0.0
rho_icrf picrf_totals 6 100
integrated :  0.0
Icurech=0.000e+00MA
Icurich=0.000e+00MA
fastran_init.finalize() called
********************************************************************************
FASTRAN DIRVER INIT
PORTS (all) = ['INIT', 'DRIVER', 'EQ0', 'TR0', 'IC', 'EQ', 'TR']
PORTS = ['INIT', 'DRIVER', 'EQ0', 'TR0', 'IC', 'EQ', 'TR']
SIMULATION_MODE = NORMAL
*** t0 = 0
EQ0 init ********
>>> efit.init() started
INPUT: SCALE found 1 , mapped value =  enabled
INPUT: R0_SCALE found 1.7 , mapped value =  1.7
INPUT: B0_SCALE found 2.0 , mapped value =  2.0
efit time = 1
init_run =  1
force free
scaled  1.7 2.0
NCAPTC: : NetCDF: Variable not found
Warning: ieee_overflow is signaling
Warning: ieee_underflow is signaling
Warning: ieee_inexact is signaling
FORTRAN STOP
ps_update disabled
Icurt=2.862e+00MA
TR0 init ********
fastran.init() entered
IC init ********
toric.init() called
('touching ', 'torica.inp')
('touching ', 'machine.inp')
('touching ', 'log.toric')
('touching ', 'toric.nc')
('touching ', 'profstat.dat')
('touching ', 'equigs.data')
('touching ', 'equidt.data')
('touching ', 'toric_cfg.nc')
EQ init ********
>>> efit.init() started
INPUT: SCALE found 1 , mapped value =  enabled
INPUT: R0_SCALE found 1.7 , mapped value =  1.7
INPUT: B0_SCALE found 2.0 , mapped value =  2.0
efit time = 3
init_run =  0
TR init ********
fastran.init() entered
nstep_pre: 1

========================================================================
= fastran driver: preprocess iteration number =  0

EQ0 step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.3120169002447857
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 2.863 3.493
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.397  1.283
error_efit = 7.697e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.826 3.538
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.12209058502295699
diff_f = 0.3933094961437211
run efit
efit, subprocess
elapsed time =  0.475  1.304
error_efit = 9.806e-05
*** generate kfile 2
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.796 3.577
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.11077589641964215
diff_f = 0.26568329096406235
run efit
efit, subprocess
elapsed time =  0.439  1.205
error_efit = 8.771e-05
*** generate kfile 3
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.771 3.609
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.07584981795335258
diff_f = 0.14782168654984462
run efit
efit, subprocess
elapsed time =  0.417  1.269
error_efit = 8.789e-05
*** generate kfile 4
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
  ps_init_tag: Plasma State v2.055 f90 module initialization.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.752 3.634
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.04538743265050715
diff_f = 0.07978366267579287
run efit
efit, subprocess
elapsed time =  0.452  1.202
error_efit = 8.459e-05
*** generate kfile 5
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.739 3.651
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.024876475752490083
diff_f = 0.04220662238628348
run efit
efit, subprocess
elapsed time =  0.459  1.187
error_efit = 8.062e-05
*** generate kfile 6
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.730 3.663
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.01277975426563888
diff_f = 0.021944826039079886
run efit
efit, subprocess
elapsed time =  0.431  1.204
error_efit = 9.851e-05
*** generate kfile 7
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.725 3.670
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.006284074837526064
diff_f = 0.011329768438872543
run efit
efit, subprocess
elapsed time =  0.430  1.252
error_efit = 8.26e-05
*** generate kfile 8
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.721 3.675
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.003001825833609716
diff_f = 0.005815732969630771
converged
Icurt=2.718e+00MA
EQ0 step finished
TR0 step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 0.0
dump_vol_profile : rho_fus pfusi 0.0
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 0.0
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 0.0
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.908e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  57945798.784389764
rho_fus pfusi 100 100
integrated :  18962618.06699784
model_beam = 0
density_model = 1: impurity = f*ne
TR0 step finished
number of iteration : 5

========================================================================
= fastran driver: iteration number =  0

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7621763590000001E+020
 <n_e(m-3)-PS> =   1.8949215805629648E+020
 <n_e(m-3)-Interpolated> =   1.9027626916753228E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3760858044341282E+020   19.017261200000000     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3760858044341282E+020   19.017261200000000     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   13519932610464632.        19.017261200000000     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL
  
  G-EQdsk data accepted, maximum rel. GS error:    6.0382639561080810E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
