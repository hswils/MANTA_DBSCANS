fastran_init.init() started
state_files: s000001.00001 g000001.00001 i000001.00001
create null s000001.00001
create null g000001.00001
create null i000001.00001
fastran_init.step() started
tokamak_id = FPP
shot_number = 000001
INPUT_DIR = /pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/input
model_beam = 0
start dakota update
update_namelist called
instate R0 updated
instate A0 updated
instate KAPPA updated
instate DELTA updated
instate B0 updated
instate IP updated
instate NE_AXIS updated
instate NE_PED updated
instate NE_SEP updated
instate TE_AXIS updated
instate TE_PED updated
instate TI_AXIS updated
instate TI_PED updated
instate XMID updated
instate XWID updated
instate H98_TARGET updated
instate_method: model
Shape from instate data array
ne from model profile, ped
te from model profile, ped
ti from model profile, ped
density_beam from model profile, parab
j_tot from model profile, parab
omega from model profile, parab
zeff from model profile, const
tbeami from model profile, const
density_alpha from model profile, zero
walpha from model profile, zero
wbeam from the model profile
density_model = 1: impurity = f*ne
init from instate: instate
usng analytic volume
end
rho_rad prad 100 100
integrated :  0.0
rho pohme 100 100
integrated :  0.0
Icurt=2.888e+00MA
rho_nbi pbe 100 100
integrated :  0.0
rho_nbi pbi 100 100
integrated :  0.0
rho_nbi sbedep 100 100
integrated :  0.0
rho_nbi tqbe 100 100
integrated :  0.0
Icurbeam=0.000e+00MA
rho_ecrf peech 100 100
integrated :  0.0
rho_icrf picrf_totals 6 100
integrated :  0.0
rho_icrf picrf_totals 6 100
integrated :  0.0
Icurech=0.000e+00MA
Icurich=0.000e+00MA
fastran_init.finalize() called
********************************************************************************
FASTRAN DIRVER INIT
PORTS (all) = ['INIT', 'DRIVER', 'EQ0', 'TR0', 'IC', 'EQ', 'TR']
PORTS = ['INIT', 'DRIVER', 'EQ0', 'TR0', 'IC', 'EQ', 'TR']
SIMULATION_MODE = NORMAL
*** t0 = 0
EQ0 init ********
>>> efit.init() started
INPUT: SCALE found 1 , mapped value =  enabled
INPUT: R0_SCALE found 1.7 , mapped value =  1.7
INPUT: B0_SCALE found 2.0 , mapped value =  2.0
efit time = 1
init_run =  1
force free
scaled  1.7 2.0
NCAPTC: : NetCDF: Variable not found
Warning: ieee_overflow is signaling
Warning: ieee_underflow is signaling
Warning: ieee_inexact is signaling
FORTRAN STOP
ps_update disabled
Icurt=2.862e+00MA
TR0 init ********
fastran.init() entered
IC init ********
toric.init() called
('touching ', 'torica.inp')
('touching ', 'machine.inp')
('touching ', 'log.toric')
('touching ', 'toric.nc')
('touching ', 'profstat.dat')
('touching ', 'equigs.data')
('touching ', 'equidt.data')
('touching ', 'toric_cfg.nc')
EQ init ********
>>> efit.init() started
INPUT: SCALE found 1 , mapped value =  enabled
INPUT: R0_SCALE found 1.7 , mapped value =  1.7
INPUT: B0_SCALE found 2.0 , mapped value =  2.0
efit time = 0
init_run =  0
TR init ********
fastran.init() entered
nstep_pre: 1

========================================================================
= fastran driver: preprocess iteration number =  0

EQ0 step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.049866159762158
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 2.863 3.493
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.375  1.317
error_efit = 8.544e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.803 3.567
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.12018990792477935
diff_f = 0.3868374982363997
run efit
efit, subprocess
elapsed time =  0.429  1.269
error_efit = 8.876e-05
*** generate kfile 2
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.765 3.617
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.10861938126558232
diff_f = 0.28089621804972487
run efit
efit, subprocess
elapsed time =  0.448  1.279
error_efit = 8.063e-05
*** generate kfile 3
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.738 3.652
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.0746403556798887
diff_f = 0.16067707508870355
run efit
efit, subprocess
elapsed time =  0.443  1.266
error_efit = 9.604e-05
*** generate kfile 4
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
  ps_init_tag: Plasma State v2.055 f90 module initialization.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.720 3.676
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.045036568974164526
diff_f = 0.08658154882247245
run efit
efit, subprocess
elapsed time =  0.411  1.227
error_efit = 9.524e-05
*** generate kfile 5
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.708 3.692
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.02501782633409962
diff_f = 0.04569961503169776
run efit
efit, subprocess
elapsed time =  0.423  1.266
error_efit = 8.274e-05
*** generate kfile 6
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.701 3.703
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.013063081143399552
diff_f = 0.023692163935839162
run efit
efit, subprocess
elapsed time =  0.455  1.235
error_efit = 8.1e-05
*** generate kfile 7
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.696 3.709
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.006475982765847149
diff_f = 0.012056587296384617
run efit
efit, subprocess
elapsed time =  0.458  1.229
error_efit = 7.97e-05
*** generate kfile 8
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 2.693 3.713
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.003066869647090671
diff_f = 0.006045363285003642
converged
Icurt=2.691e+00MA
EQ0 step finished
TR0 step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 0.0
dump_vol_profile : rho_fus pfusi 0.0
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 0.0
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 0.0
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.627e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  45654683.278002776
rho_fus pfusi 100 100
integrated :  15089396.875631485
model_beam = 0
density_model = 1: impurity = f*ne
TR0 step finished
number of iteration : 5

========================================================================
= fastran driver: iteration number =  0

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7626370919999999E+020
 <n_e(m-3)-PS> =   1.7671350710618151E+020
 <n_e(m-3)-Interpolated> =   1.7740474092071571E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3763189705723301E+020   18.994622240000002     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3763189705723301E+020   18.994622240000002     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   13512366020729416.        18.994622240000002     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL
  
  G-EQdsk data accepted, maximum rel. GS error:    6.1651318896779319E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000000     
 electron total   25.296245966695626        3.0305684512957667     
 ion totals fundamental   4.9941557055788780E-005   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        71.673135640451548        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   328402.27745963598     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   8.2100569364908990E-003
 Total FW Driven Current from each source-> Interpolated (A)   328402.27745948778     
 Total FW Driven Current from all sources -> Interpolated (A)   328402.27745948778     
  *ps_update_file_write: normal exit,            6  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   11330400.615525998      Watts
 FW ion power, integral
   28669599.384457991      Watts
error but neglected...
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 1.0344547205347987
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.396  1.331
error_efit = 7.925e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.001 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00017456019647392142
diff_f = 0.00010581907164378
converged
Icurt=9.999e+00MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 45654683.278002776
dump_vol_profile : rho_fus pfusi 15089396.875631485
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 11330400.615525998
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 53.93655807663803
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 28669545.447899904
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.416e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  32984086.527723305
rho_fus pfusi 100 100
integrated :  10724166.949492026
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  1

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7626370919999999E+020
 <n_e(m-3)-PS> =   1.7670239084704665E+020
 <n_e(m-3)-Interpolated> =   1.7739756415390541E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3722421167354867E+020   18.763763449902388     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3722421167354867E+020   18.763763449902388     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   24530889904089948.        18.763763449902388     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL
  
  G-EQdsk data accepted, maximum rel. GS error:    6.5897199864798509E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   99.999999999999986     
 electron total   24.931336280458364        3.0107551514150428     
 ion totals fundamental   5.6344321654460562E-005   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        72.057852223804929        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   290195.10530481063     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   7.2548776326202659E-003
 Total FW Driven Current from each source-> Interpolated (A)   290195.10530466499     
 Total FW Driven Current from all sources -> Interpolated (A)   290195.10530466499     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   11175739.532423984      Watts
 FW ion power, integral
   28824260.467559021      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/rf_ic_toric_15/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 0.9956546320796313
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.363  1.396
error_efit = 8.987e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 9.995 1.001
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.0001840004928966651
diff_f = 0.00027477235560543773
converged
  ps_init_tag: Plasma State v2.055 f90 module initialization.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
Icurt=9.987e+00MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 32984086.527723305
dump_vol_profile : rho_fus pfusi 10724166.949492026
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 11175739.532423984
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 60.764605089549875
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 28824199.702953927
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.410e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  32725691.704343535
rho_fus pfusi 100 100
integrated :  10606426.208158825
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  2

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7626370919999999E+020
 <n_e(m-3)-PS> =   1.7666760650248523E+020
 <n_e(m-3)-Interpolated> =   1.7736664756564266E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3681937421742906E+020   18.596238304975209     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3681937421742906E+020   18.596238304975209     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   35472442772187328.        18.596238304975209     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL
  
  G-EQdsk data accepted, maximum rel. GS error:    7.7654426732304402E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000001     
 electron total   24.092757799696802        3.1345938869103902     
 ion totals fundamental   6.2262306994038759E-005   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        72.772586051085824        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   254366.20600869492     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   6.3591551502173733E-003
 Total FW Driven Current from each source-> Interpolated (A)   254366.20600858904     
 Total FW Driven Current from all sources -> Interpolated (A)   254366.20600858904     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   10890057.706922514      Watts
 FW ion power, integral
   29109942.293065794      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/rf_ic_toric_15/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 0.9649345835242535
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.364  1.423
error_efit = 7.633e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 9.996 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00010428729812324052
diff_f = 0.00030018661753002405
converged
Icurt=9.990e+00MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 32725691.704343535
dump_vol_profile : rho_fus pfusi 10606426.208158825
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 10890057.706922514
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 66.14265549199592
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 29109876.150410302
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.413e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  32948972.486615077
rho_fus pfusi 100 100
integrated :  10684360.025955832
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  3

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7626370919999999E+020
 <n_e(m-3)-PS> =   1.7663934909226775E+020
 <n_e(m-3)-Interpolated> =   1.7734225096534052E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3641441416717745E+020   18.522544258463611     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3641441416717745E+020   18.522544258463611     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   46417308995204216.        18.522544258463611     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL
  
  G-EQdsk data accepted, maximum rel. GS error:    8.9748384472874438E-003
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000001     
 electron total   23.253817825003974        3.2691005888559621     
 ion totals fundamental   6.1598316712512013E-005   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        73.477019987823354        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   225788.59048836690     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   5.6447147622091728E-003
 Total FW Driven Current from each source-> Interpolated (A)   225788.59048823433     
 Total FW Driven Current from all sources -> Interpolated (A)   225788.59048823433     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   10607972.712979451      Watts
 FW ion power, integral
   29392027.287003871      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/rf_ic_toric_15/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 0.9426600161785391
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.365  1.391
error_efit = 7.447e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 9.998 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 0.00011527843144000894
diff_f = 0.0001815404218520034
converged
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_nclass: allocating 16 Pfirsch-Schlutter moments profiles.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
  %ps_mhdeq_derive: compute R & Z minmax profiles; triangularity, etc.
  %ps_mhdeq_derive: compute <1/B^2>, NCLASS moments, etc.
  %ps_mhdeq_derive: compute NC sqrt-singular flux surface averages.
  %ps_mhdeq_derive: compute profiles of Bmin, Bmax.
  %ps_update_fromxplasma: allocating nr,nz  =          129 ,         129
  %ps_update_fromxplasma: allocating nlim   =            5
  %ps_mhdeq_derive: compute <1/R^2> and <|grad(rho)|^2/R^2>.
  %ps_mhdeq_derive: compute metric averages <1/R>, <|grad(rho)|>, etc.
Icurt=9.994e+00MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 32948972.486615077
dump_vol_profile : rho_fus pfusi 10684360.025955832
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 10607972.71297945
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 65.24637863768272
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 29391962.040625233
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.425e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  33634179.088234216
rho_fus pfusi 100 100
integrated :  10929599.252051225
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: iteration number =  4

IC step
toric.step() called
cur_state_file =  s000001.00001
('Total IC power = ', 40000000.0)
power =  40000000.0
 using s000001.00001 as default state.
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 Prepare toric input reading machine.inp
 ps%ns(1,0)   2.7626370919999999E+020
 <n_e(m-3)-PS> =   1.7661768809845945E+020
 <n_e(m-3)-Interpolated> =   1.7732449907578366E+020
 Thermal ion name, A, Z, dens, temp = 
 D           2           1   1.3600733200223997E+020   18.554555785658479     
 Thermal ion name, A, Z, dens, temp = 
 T           3           1   1.3600733200223997E+020   18.554555785658479     
 Thermal ion name, A, Z, dens, temp = 
 W         182          74   57419529669190008.        18.554555785658479     
 Fast ion name, A, Z = D_beam           2           1
 Fast ion name, A, Z = He4_fusn           4           2
('prepare_eqdsk', '/global/common/software/atom/perlmutter/binaries/geqxpl/default/geqxpl', 'g000001.00001')
Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL
  
  G-EQdsk data accepted, maximum rel. GS error:    1.0153430404252484E-002
  
  Bphi is counter-clockwise viewed from above (nsnccwb = 1)
  
  Jphi is counter-clockwise viewed from above (nsnccwi = 1)
  
 equigs_write completion code (0=normal):           0
('toric processors = ', '24')
  -- get (restore) plasma state from file -- 
 process_toric_output: cur_state_file = s000001.00001
  ps_init_tag: Plasma State v2.055 f90 module initialization.
 freq_ic, picrf  alloc? T T
 RF alloc? T         600
    number of icrf sources =            1
    number of species =            5           3
 process toric output: profile and spec sizes:
 toric mesh, PS mesh         459         101
 toric species, PS species counts           5           3
 powers in percent
 total:   100.00000000000000     
 electron total   22.685412442123877        3.3507629124646097     
 ion totals fundamental   5.9905157860689686E-005   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 ion totals harmonic   0.0000000000000000        73.963764740253652        0.0000000000000000        0.0000000000000000        0.0000000000000000     
    number of thermal species (ps%nspec_th) =            3
    number of icrf sources (ps%nicrf_src) =            1
 ps%freq_ic =    0.0000000000000000     
 ps%icrf_src_name = IC00                            
 ps%power_ic =    40000000.000000000     
 ICRF Power   40000000.000000000     
   --storing toric data in current plasma state
 Total FW Driven Current (A)   204802.38990689552     
 Total ICRF Power (W)   40000000.000000000     
 FWCD Effciency (A/W)   5.1200597476723881E-003
 Total FW Driven Current from each source-> Interpolated (A)   204802.38990673184     
 Total FW Driven Current from all sources -> Interpolated (A)   204802.38990673184     
  *ps_update_file_write: normal exit,            5  update elements written.
 Stored Partial RF Plasma State
 electron power, integral
   10412912.728409428      Watts
 FW ion power, integral
   29587087.271568235      Watts
('merged TORIC plasma state data ', '/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/rf_ic_toric_15/RF_IC_s000001.00001')
IC step finished
EQ step
>>> efit.step() started
INPUT: PRESSURE found kinetic , mapped value =  kinetic
INPUT: RELAX_PROFILE not found, use default value: 0
INPUT: RELAX_METRIC not found, use default value: 0.5
INPUT: BETAN_TARGET not found, use default value: -1.0
model_pressure = kinetic
betan = 0.9280277318332145
INPUT: TOPOLOGY found DN , mapped value =  DN
INPUT: ERROR not found, use default value: 1.0e-4
INPUT: MAX_EFIT_ERROR not found, use default value: 0.1
init_run_step = 0
niter =  10
*** generate kfile 0
r0 = 4.55
b0 = 11.0
ip = 9999999.995
ip, ip cal, ip/(ip cal) = 10.000 10.003 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
run efit
efit, subprocess
elapsed time =  0.364  1.521
error_efit = 7.682e-05
*** generate kfile 1
apply underrelaxation
r0 = 4.55
b0 = 11.0
ip = 9999999.995
inmtric under-relax: 0.5
ip, ip cal, ip/(ip cal) = 10.000 10.000 1.000
weigting upper xpoint: [2, 3, 4, 5]
weigting lower xpoint: [9, 10, 11, 12]
diff_p = 9.755181945216194e-05
diff_f = 0.00014342750455690207
converged
Icurt=9.997e+00MA
EQ step finished
TR step
fastran.step() entered
update_next = disabled
update_instate =  True
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
model_beam = 0
dump_vol_profile : rho_nbi pbe 0.0
dump_vol_profile : rho_nbi pbi 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_nbi pbth 0.0
dump_vol_profile : rho_fus pfuse 33634179.088234216
dump_vol_profile : rho_fus pfusi 10929599.252051225
dump_vol_profile : rho_fus pfusth 0.0
dump_vol_profile : rho_ecrf peech 0.0
dump_vol_profile : rho_icrf picrf_totals 10412912.728409428
dump_vol_profile : rho_lhrf pelh 0.0
S_name =  ['e                               ' 'D                               '
 'T                               ' 'W                               ']
0 e                               
1 D                               
processing 1 D                               
dump_vol_profile : rho_icrf picrf_totals 63.790792991263295
2 T                               
processing 2 T                               
dump_vol_profile : rho_icrf picrf_totals 29587023.48077525
3 W                               
processing 3 W                               
dump_vol_profile : rho_icrf picrf_totals 0.0
dump_vol_profile : rho_lhrf pilh 0.0
dump_vol_profile : rho_nbi tqbe 0.0
dump_vol_profile : rho_nbi tqbi 0.0
dump_vol_profile : rho_nbi tqbjxb 0.0
dump_vol_profile : rho_nbi tqbth 0.0
dump_vol_profile : rho_nbi sbedep 0.0
dump_vol_profile : rho_nbi sbehalo 0.0
dump_vol_profile : rho sn_trans 0.0
dump_vol_profile : rho_rad prad 0.0
dump_vol_profile : rho pohme 0.0
/global/common/software/atom/perlmutter/binaries/fastran/default/xfastran_ver1.06
ncpu =  1
n1d  =  1
nky  =  1
[1, 1, 74]
['D', 'T', 'W']
ion D
ion T
imp W
nspec_th = 3
Icurt=1.000e+01MA
Icurr_bootstrap=1.434e+00MA
Icurr_ohmic=0.000e+00MA
rho_fus pfuse 100 100
integrated :  34160472.63945887
rho_fus pfusi 100 100
integrated :  11105236.848244995
model_beam = 0
density_model = 1: impurity = f*ne
TR step finished

========================================================================
= fastran driver: finalize

EQ0 finalize
>>> efit.finalize() started
EQ0 finalize finished
TR0 finalize
fastran.finalize() entered
TR0 finalize finished
IC finalize
toric.finalize() called
IC finalize finished
EQ finalize
>>> efit.finalize() started
EQ finalize finished
TR finalize
fastran.finalize() entered
TR finalize finished
********************************************************************************
FASTRAN DIRVER FINALIZE
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/k000001.00000
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/a000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/s000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/g000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/i000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/k000001.00001
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/a000001.00000
/pscratch/sd/h/hswils/github_repos/MANTA_DBSCANS/tnbdry_scan/SCAN/simulation_1857735_0001/work/plasma_state/f000001.00001
